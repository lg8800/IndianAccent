{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\chhavi\\\\Documents\\\\oopsProject\\\\ReactNative\\\\confusion\\\\components\\\\HomeComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Card } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { Loading } from \"./LoadingComponent\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dishes: state.dishes,\n    promotions: state.promotions,\n    leaders: state.leaders\n  };\n};\n\nfunction RenderItem(props) {\n  var item = props.item;\n\n  if (props.isLoading) {\n    return React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    });\n  } else if (props.errMess) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, props.errMess));\n  } else {\n    if (item != null) {\n      return React.createElement(Card, {\n        featuredTitle: item.name,\n        featuredSubtitle: item.designation,\n        image: {\n          uri: baseUrl + item.image\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, item.description));\n    } else {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 24\n        }\n      });\n    }\n  }\n}\n\nvar Home = function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n    _this.animatedValue = new Animated.Value(0);\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, React.createElement(RenderItem, {\n        item: this.props.dishes.dishes.filter(function (dish) {\n          return dish.featured;\n        })[0],\n        isLoading: this.props.dishes.isLoading,\n        errMess: this.props.dishes.errMess,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }), React.createElement(RenderItem, {\n        item: this.props.leaders.leaders.filter(function (leader) {\n          return leader.featured;\n        })[0],\n        isLoading: this.props.leaders.isLoading,\n        errMess: this.props.leaders.errMess,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }), React.createElement(RenderItem, {\n        item: this.props.promotions.promotions.filter(function (promo) {\n          return promo.featured;\n        })[0],\n        isLoading: this.props.promotions.isLoading,\n        errMess: this.props.promotions.errMess,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nHome.navigationOptions = {\n  title: 'Home'\n};\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["C:/Users/chhavi/Documents/oopsProject/ReactNative/confusion/components/HomeComponent.js"],"names":["React","Component","Card","connect","baseUrl","Loading","mapStateToProps","state","dishes","promotions","leaders","RenderItem","props","item","isLoading","errMess","name","designation","uri","image","margin","description","Home","animatedValue","Animated","Value","filter","dish","featured","leader","promo","navigationOptions","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, Animated, Easing, ScrollView } from 'react-native';\r\nimport { Card } from 'react-native-elements';\r\nimport { connect } from 'react-redux';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n}\r\n\r\nfunction RenderItem(props) {\r\n    \r\n        const item = props.item;\r\n\r\n        if(props.isLoading) {\r\n            return(\r\n                <Loading />\r\n            )\r\n        }\r\n\r\n        else if (props.errMess) {\r\n            return(\r\n                <View>\r\n                    <Text>{props.errMess}</Text>\r\n                </View>\r\n            );\r\n        }\r\n\r\n        else {\r\n            if (item != null) {\r\n                return(\r\n                    <Card\r\n                        featuredTitle={item.name}\r\n                        featuredSubtitle={item.designation}\r\n                        image={{uri: baseUrl + item.image}}>\r\n                        <Text\r\n                            style={{margin: 10}}>\r\n                            {item.description}</Text>\r\n                    </Card>\r\n                );\r\n            }\r\n            else {\r\n                return(<View></View>);\r\n            }\r\n        }\r\n}\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.animatedValue = new Animated.Value(0);\r\n    }\r\n\r\n    static navigationOptions = {\r\n        title: 'Home'\r\n    };\r\n    render() {\r\n        return( \r\n            <ScrollView>\r\n                    <RenderItem item={this.props.dishes.dishes.filter((dish) => dish.featured)[0]} \r\n                        isLoading={this.props.dishes.isLoading}\r\n                        errMess={this.props.dishes.errMess}\r\n                        />\r\n                    <RenderItem item={this.props.leaders.leaders.filter((leader) => leader.featured)[0]} \r\n                        isLoading={this.props.leaders.isLoading}\r\n                        errMess={this.props.leaders.errMess}\r\n                    />\r\n                    <RenderItem item={this.props.promotions.promotions.filter((promo) => promo.featured)[0]} \r\n                        isLoading={this.props.promotions.isLoading}\r\n                        errMess={this.props.promotions.errMess}\r\n                    />\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home);"]},"metadata":{},"sourceType":"module"}