{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\chhavi\\\\Documents\\\\oopsProject\\\\ReactNative\\\\confusion\\\\components\\\\ReservationComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Card } from 'react-native-elements';\nimport DatePicker from 'react-native-datepicker';\nimport * as Animatable from 'react-native-animatable';\n\nvar Reservation = function (_Component) {\n  _inherits(Reservation, _Component);\n\n  var _super = _createSuper(Reservation);\n\n  function Reservation(props) {\n    var _this;\n\n    _classCallCheck(this, Reservation);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      guests: 1,\n      vegetarian: false,\n      date: ''\n    };\n    return _this;\n  }\n\n  _createClass(Reservation, [{\n    key: \"handleReservation\",\n    value: function handleReservation() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          date = _this$state.date,\n          guests = _this$state.guests,\n          vegetarian = _this$state.vegetarian;\n      console.log(JSON.stringify(this.state));\n      Alert.alert('Your Reservation OK?', \"Number of guests: \" + guests + \"\\nVegetarian? \" + (vegetarian ? 'Yes' : 'No') + \"\\nDate and Time:\" + date, [{\n        text: 'Cancel',\n        style: 'cancel',\n        onPress: function onPress() {\n          return _this2.resetForm();\n        }\n      }, {\n        text: 'OK',\n        onPress: function onPress() {\n          return _this2.confirmReservation(date);\n        }\n      }], {\n        cancelable: false\n      });\n    }\n  }, {\n    key: \"confirmReservation\",\n    value: function confirmReservation(date) {\n      this.resetForm();\n    }\n  }, {\n    key: \"resetForm\",\n    value: function resetForm() {\n      this.setState({\n        guests: 1,\n        vegetarian: false,\n        date: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var todayDate = new Date().toISOString().split('T')[0];\n      return React.createElement(Animatable.View, {\n        animation: \"zoomIn\",\n        duration: 2000,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.formRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.formLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, \"Number of Guests\"), React.createElement(Picker, {\n        style: styles.formItem,\n        selectedValue: this.state.guests,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return _this3.setState({\n            guests: itemValue\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"1\",\n        value: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"2\",\n        value: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"3\",\n        value: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"4\",\n        value: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"5\",\n        value: \"5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"6\",\n        value: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }\n      }))), React.createElement(View, {\n        style: styles.formRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.formLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }, \"Vegetarian/Non-vegetarian?\"), React.createElement(Switch, {\n        style: styles.formItem,\n        value: this.state.vegetarian,\n        onTintColor: \"#512DAB\",\n        onValueChange: function onValueChange(value) {\n          return _this3.setState({\n            vegetarian: value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.formRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.formLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, \"Date and Time\"), React.createElement(DatePicker, {\n        style: {\n          flex: 2,\n          marginRight: 20\n        },\n        date: this.state.date,\n        format: \"\",\n        mode: \"date\",\n        placeholder: \"select date and time\",\n        minDate: \"2017-01-01\",\n        confirmBtnText: \"Confirm\",\n        cancelBtnText: \"Cancel\",\n        customStyles: {\n          dateIcon: {\n            position: \"absolute\",\n            left: 0,\n            top: 4,\n            marginLeft: 0\n          },\n          dateInput: {\n            marginLeft: 36\n          }\n        },\n        onDateChange: function onDateChange(date) {\n          _this3.setState({\n            date: date\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.formRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }, React.createElement(Button, {\n        title: \"Reserve\",\n        color: \"#fa0255\",\n        onPress: function onPress() {\n          return _this3.handleReservation();\n        },\n        accessibilityLabel: \"Learn more about this purple button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return Reservation;\n}(Component);\n\nReservation.navigationOptions = {\n  title: 'Reserve Table'\n};\nvar styles = StyleSheet.create({\n  formRow: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    flexDirection: 'row',\n    margin: 20\n  },\n  formLabel: {\n    fontSize: 18,\n    flex: 2\n  },\n  formItem: {\n    flex: 1\n  },\n  modal: {\n    justifyContent: 'center',\n    margin: 20\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    backgroundColor: '#fa0255',\n    textAlign: 'center',\n    color: 'white',\n    marginBottom: 20\n  },\n  modalText: {\n    fontSize: 18,\n    margin: 10\n  }\n});\nexport default Reservation;","map":{"version":3,"sources":["C:/Users/chhavi/Documents/oopsProject/ReactNative/confusion/components/ReservationComponent.js"],"names":["React","Component","Card","DatePicker","Animatable","Reservation","props","state","guests","vegetarian","date","console","log","JSON","stringify","Alert","alert","text","style","onPress","resetForm","confirmReservation","cancelable","setState","todayDate","Date","toISOString","split","styles","formRow","formLabel","formItem","itemValue","itemIndex","value","flex","marginRight","dateIcon","position","left","top","marginLeft","dateInput","handleReservation","navigationOptions","title","StyleSheet","create","alignItems","justifyContent","flexDirection","margin","fontSize","modal","modalTitle","fontWeight","backgroundColor","textAlign","color","marginBottom","modalText"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Alert, Text, View, ScrollView, StyleSheet, Picker, Switch, Button, Modal } from 'react-native';\r\nimport { Card } from 'react-native-elements';\r\nimport DatePicker from 'react-native-datepicker';\r\nimport * as Animatable from 'react-native-animatable';\r\n\r\nclass Reservation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            guests: 1,\r\n            vegetarian: false,\r\n            date: '',\r\n        }\r\n    }\r\n\r\n    static navigationOptions = {\r\n        title: 'Reserve Table'\r\n    }\r\n\r\n    handleReservation() {\r\n\r\n       const { date, guests, vegetarian } = this.state;\r\n       console.log(JSON.stringify(this.state));\r\n\r\n       Alert.alert(\r\n        'Your Reservation OK?',\r\n        `Number of guests: ${guests}\\nVegetarian? ${vegetarian ? 'Yes' : 'No'}\\nDate and Time:${date}`,\r\n        [\r\n          {\r\n            text: 'Cancel',\r\n            style: 'cancel',\r\n            onPress: () => this.resetForm(),\r\n          },\r\n          {\r\n            text: 'OK',\r\n            onPress: () => this.confirmReservation(date),\r\n          },\r\n        ],\r\n        { cancelable: false },\r\n      );\r\n    }\r\n\r\n    confirmReservation(date) {\r\n        this.resetForm();\r\n      }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            guests: 1,\r\n            vegetarian: false,\r\n            date: ''\r\n       }) ;\r\n    }\r\n\r\n    render() {\r\n\r\n        const todayDate = new Date().toISOString().split('T')[0];\r\n        return(\r\n            <Animatable.View animation=\"zoomIn\" duration={2000}>\r\n                <ScrollView>\r\n                    <View style={styles.formRow}>\r\n                        <Text style={styles.formLabel}>Number of Guests</Text>\r\n                        <Picker\r\n                            style={styles.formItem}\r\n                            selectedValue={this.state.guests}\r\n                            onValueChange={(itemValue, itemIndex) => this.setState({ guests: itemValue})}\r\n                            >\r\n                                <Picker.Item label='1' value='1' />\r\n                                <Picker.Item label='2' value='2' />\r\n                                <Picker.Item label='3' value='3' />\r\n                                <Picker.Item label='4' value='4' />\r\n                                <Picker.Item label='5' value='5' />\r\n                                <Picker.Item label='6' value='6' />\r\n                        </Picker>\r\n                    </View>\r\n                    <View style={styles.formRow}>\r\n                        <Text style={styles.formLabel}>Vegetarian/Non-vegetarian?</Text>\r\n                        <Switch\r\n                            style={styles.formItem}\r\n                            value={this.state.vegetarian}\r\n                            onTintColor='#512DAB'\r\n                            onValueChange={(value) => this.setState({ vegetarian: value })}\r\n                            >\r\n                        </Switch>\r\n                    </View>\r\n                    <View style={styles.formRow}>\r\n                        <Text style={styles.formLabel}>Date and Time</Text>\r\n                        <DatePicker\r\n                            style={{ flex: 2, marginRight: 20}}\r\n                            date={this.state.date}\r\n                            format=''\r\n                            mode='date'\r\n                            placeholder='select date and time'\r\n                            minDate='2017-01-01'\r\n                            confirmBtnText='Confirm'\r\n                            cancelBtnText='Cancel'\r\n                            customStyles={{\r\n                                dateIcon: {\r\n                                    position: \"absolute\",\r\n                                    left: 0,\r\n                                    top: 4,\r\n                                    marginLeft: 0\r\n                                },\r\n                                dateInput: {\r\n                                    marginLeft: 36\r\n                                }\r\n                            }}\r\n                            onDateChange={(date) => {this.setState({ date: date})}}\r\n                            />\r\n                    </View>\r\n                    <View style={styles.formRow}>\r\n                        <Button\r\n                            title='Reserve'\r\n                            color='#fa0255'\r\n                            onPress={() => this.handleReservation()}\r\n                            accessibilityLabel='Learn more about this purple button'\r\n                            />\r\n                    </View>\r\n                </ScrollView>\r\n            </Animatable.View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    formRow: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        margin: 20\r\n    },\r\n    formLabel: {\r\n        fontSize: 18,\r\n        flex: 2\r\n    },\r\n    formItem: {\r\n        flex: 1\r\n    },\r\n    modal: {\r\n        justifyContent: 'center',\r\n        margin: 20\r\n    },\r\n    modalTitle: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        backgroundColor: '#fa0255',\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        marginBottom: 20\r\n    },\r\n    modalText: {\r\n        fontSize: 18,\r\n        margin: 10\r\n    }\r\n})\r\n\r\nexport default Reservation;\r\n"]},"metadata":{},"sourceType":"module"}