{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\chhavi\\\\Documents\\\\oopsProject\\\\ReactNative\\\\confusion\\\\components\\\\DishdetailComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport { Card, Icon, Rating, Input } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { postFavorite as _postFavorite, addComment as _addComment, postComment as _postComment } from \"../redux/ActionCreators\";\nimport * as Animatable from 'react-native-animatable';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    favorites: state.favorites\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    postFavorite: function postFavorite(dishId) {\n      return dispatch(_postFavorite(dishId));\n    },\n    addComment: function addComment(dishId, rating, comment, author) {\n      return dispatch(_addComment(dishId, rating, comment, author));\n    },\n    postComment: function postComment(dishId, rating, comment, author) {\n      return dispatch(_postComment(dishId, rating, comment, author));\n    }\n  };\n};\n\nfunction RenderDish(props) {\n  var _this = this;\n\n  var dish = props.dish;\n\n  handleViewRef = function handleViewRef(ref) {\n    return _this.view = ref;\n  };\n\n  var recognizeDrag = function recognizeDrag(_ref) {\n    var moveX = _ref.moveX,\n        moveY = _ref.moveY,\n        dx = _ref.dx,\n        dy = _ref.dy;\n    if (dx < -200) return true;else return false;\n  };\n\n  var recognizeComment = function recognizeComment(_ref2) {\n    var dx = _ref2.dx;\n    if (dx > 200) return true;\n    return false;\n  };\n\n  var panResponder = PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder(e, gestureState) {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant() {\n      _this.view.rubberBand(1000).then(function (endState) {\n        return console.log(endState.finished ? 'finished' : 'cancelled');\n      });\n    },\n    onPanResponderEnd: function onPanResponderEnd(e, gestureState) {\n      if (recognizeDrag(gestureState)) Alert.alert('Add to Favorites', 'Are you sure you wish to add ' + dish.name + ' to your favorites?', [{\n        text: 'Cancel',\n        onPress: function onPress() {\n          return console.log('Cancel pressed');\n        },\n        style: 'cancel'\n      }, {\n        text: 'OK',\n        onPress: function onPress() {\n          return props.favorite ? console.log('Already Favorite') : props.onPress();\n        }\n      }], {\n        cancelable: false\n      });\n      if (recognizeComment(gestureState)) props.onSelect();\n      return true;\n    }\n  });\n\n  if (dish != null) {\n    return React.createElement(Animatable.View, _extends({\n      animation: \"fadeInDown\",\n      duration: 2000,\n      delay: 1000,\n      ref: this.handleViewRef\n    }, panResponder.panHandlers, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }), React.createElement(Card, {\n      featuredTitle: dish.name,\n      image: {\n        uri: baseUrl + dish.image\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        margin: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, dish.description), React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, React.createElement(Icon, {\n      raised: true,\n      reverse: true,\n      name: props.favorite ? 'heart' : 'heart-o',\n      type: \"font-awesome\",\n      color: \"#f50\",\n      onPress: function onPress() {\n        return props.favorite ? console.log('Already Favorite') : props.onPress();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }), React.createElement(Icon, {\n      raised: true,\n      reverse: true,\n      name: \"pencil\",\n      type: \"font-awesome\",\n      color: \"#512DA8\",\n      onPress: function onPress() {\n        return props.onSelect();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }))));\n  } else {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 16\n      }\n    });\n  }\n}\n\nfunction RenderComments(props) {\n  var _this2 = this;\n\n  var comments = props.comments;\n\n  var renderCommentItem = function renderCommentItem(_ref3) {\n    var item = _ref3.item,\n        index = _ref3.index;\n    return React.createElement(View, {\n      key: index,\n      style: {\n        margin: 10\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 14\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, item.comment), React.createElement(Text, {\n      style: {\n        fontSize: 12\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, item.rating, \" Stars\"), React.createElement(Text, {\n      style: {\n        fontSize: 12\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, '-- ' + item.author + ', ' + item.date));\n  };\n\n  return React.createElement(Animatable.View, {\n    animation: \"fadeInUp\",\n    duration: 2000,\n    delay: 1000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, React.createElement(Card, {\n    title: \"Comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: comments,\n    renderItem: renderCommentItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  })));\n}\n\nvar Dishdetail = function (_Component) {\n  _inherits(Dishdetail, _Component);\n\n  var _super = _createSuper(Dishdetail);\n\n  function Dishdetail(props) {\n    var _this3;\n\n    _classCallCheck(this, Dishdetail);\n\n    _this3 = _super.call(this, props);\n    _this3.state = {\n      rating: 0,\n      author: '',\n      comment: '',\n      showModal: false\n    };\n    return _this3;\n  }\n\n  _createClass(Dishdetail, [{\n    key: \"markFavorite\",\n    value: function markFavorite(dishId) {\n      this.props.postFavorite(dishId);\n    }\n  }, {\n    key: \"toggleModal\",\n    value: function toggleModal() {\n      this.setState({\n        showModal: !this.state.showModal\n      });\n    }\n  }, {\n    key: \"handleComments\",\n    value: function handleComments(dishId) {\n      console.log(JSON.stringify(this.state));\n      this.toggleModal();\n      this.props.postComment(dishId, this.state.rating, this.state.comment, this.state.author);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var dishId = this.props.navigation.getParam('dishId', '');\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }\n      }, React.createElement(RenderDish, {\n        dish: this.props.dishes.dishes[+dishId],\n        favorite: this.props.favorites.some(function (el) {\n          return el === dishId;\n        }),\n        onPress: function onPress() {\n          return _this4.markFavorite(dishId);\n        },\n        onSelect: function onSelect() {\n          return _this4.toggleModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }\n      }), React.createElement(RenderComments, {\n        comments: this.props.comments.comments.filter(function (comment) {\n          return comment.dishId === dishId;\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }\n      }), React.createElement(Modal, {\n        animation: \"slide\",\n        transparent: false,\n        visible: this.state.showModal,\n        onDismiss: function onDismiss() {\n          return _this4.toggleModal();\n        },\n        onRequestClose: function onRequestClose() {\n          return _this4.toggleModal;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.modal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }\n      }, React.createElement(Rating, {\n        showRating: true,\n        type: \"star\",\n        fractions: 0,\n        startingValue: 0,\n        imageSize: 40,\n        onFinishRating: function onFinishRating(rating) {\n          return _this4.setState({\n            rating: rating\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }\n      }, React.createElement(Input, {\n        placeholder: \" Author\",\n        leftIcon: React.createElement(Icon, {\n          name: \"user-o\",\n          type: \"font-awesome\",\n          size: 24,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 37\n          }\n        }),\n        onChangeText: function onChangeText(value) {\n          return _this4.setState({\n            author: value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }\n      }, React.createElement(Input, {\n        placeholder: \" Comment\",\n        leftIcon: React.createElement(Icon, {\n          name: \"comment-o\",\n          type: \"font-awesome\",\n          size: 24,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 37\n          }\n        }),\n        onChangeText: function onChangeText(value) {\n          return _this4.setState({\n            comment: value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      }, React.createElement(Button, {\n        color: \"#512DA8\",\n        title: \"SUBMIT\",\n        onPress: function onPress() {\n          return _this4.handleComments(dishId);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          return _this4.toggleModal();\n        },\n        color: \"#989898\",\n        title: \"CLOSE\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }]);\n\n  return Dishdetail;\n}(Component);\n\nDishdetail.navigationOptions = {\n  title: 'Dish Details'\n};\nvar styles = StyleSheet.create({\n  formRow: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    flexDirection: 'row',\n    margin: 28\n  },\n  formLabel: {\n    fontSize: 18,\n    flex: 2\n  },\n  formItem: {\n    flex: 1\n  },\n  modal: {\n    justifyContent: 'center',\n    margin: 20\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    backgroundColor: '#512DA8',\n    textAlign: 'center',\n    color: 'white',\n    marginBottom: 20\n  },\n  modalText: {\n    fontSize: 18,\n    margin: 10\n  }\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Dishdetail);","map":{"version":3,"sources":["C:/Users/chhavi/Documents/oopsProject/ReactNative/confusion/components/DishdetailComponent.js"],"names":["React","Component","Card","Icon","Rating","Input","connect","baseUrl","postFavorite","addComment","postComment","Animatable","mapStateToProps","state","dishes","comments","favorites","mapDispatchToProps","dispatch","dishId","rating","comment","author","RenderDish","props","dish","handleViewRef","ref","view","recognizeDrag","moveX","moveY","dx","dy","recognizeComment","panResponder","PanResponder","create","onStartShouldSetPanResponder","e","gestureState","onPanResponderGrant","rubberBand","then","endState","console","log","finished","onPanResponderEnd","Alert","alert","name","text","onPress","style","favorite","cancelable","onSelect","panHandlers","uri","image","margin","description","flexDirection","justifyContent","RenderComments","renderCommentItem","item","index","fontSize","date","id","toString","Dishdetail","showModal","setState","JSON","stringify","toggleModal","navigation","getParam","some","el","markFavorite","filter","styles","modal","value","handleComments","navigationOptions","title","StyleSheet","formRow","alignItems","flex","formLabel","formItem","modalTitle","fontWeight","backgroundColor","textAlign","color","marginBottom","modalText"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, ScrollView, FlatList, Modal, StyleSheet, Button, Alert, PanResponder, Share } from 'react-native';\r\nimport { Card, Icon, Rating, Input } from 'react-native-elements';\r\nimport { connect } from 'react-redux';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { postFavorite, addComment, postComment } from '../redux/ActionCreators';\r\nimport * as Animatable from 'react-native-animatable';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        favorites: state.favorites\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postFavorite: (dishId) => dispatch(postFavorite(dishId)),\r\n    addComment: (dishId, rating, comment, author) => dispatch(addComment(dishId, rating, comment, author)),\r\n    postComment: (dishId, rating, comment, author) => dispatch(postComment(dishId, rating, comment, author))\r\n})\r\n\r\nfunction RenderDish(props) {\r\n    const dish = props.dish;\r\n\r\n    handleViewRef = ref => this.view = ref;\r\n\r\n    const recognizeDrag = ({ moveX, moveY, dx, dy }) => {\r\n        if ( dx < -200 )\r\n            return true;\r\n        else\r\n            return false; \r\n    };\r\n\r\n    const recognizeComment = ({ dx }) => {\r\n        if (dx > 200) return true; \r\n        return false;\r\n      };\r\n\r\n    const panResponder = PanResponder.create({\r\n        onStartShouldSetPanResponder: (e, gestureState) => {\r\n            return true;\r\n        },\r\n\r\n        onPanResponderGrant: () => {\r\n            this.view.rubberBand(1000)\r\n                .then(endState => console.log(endState.finished ? 'finished' : 'cancelled'))\r\n        },\r\n\r\n        onPanResponderEnd: (e, gestureState) => {\r\n            if (recognizeDrag(gestureState))\r\n                Alert.alert(\r\n                    'Add to Favorites',\r\n                    'Are you sure you wish to add ' + dish.name + ' to your favorites?',\r\n                    [\r\n                       {\r\n                           text: 'Cancel',\r\n                           onPress: () => console.log('Cancel pressed'),\r\n                           style: 'cancel'\r\n                       },\r\n                       {\r\n                            text: 'OK',\r\n                            onPress: () => props.favorite ? console.log('Already Favorite') : props.onPress()\r\n                       }\r\n                    ],\r\n                    { cancelable: false}\r\n                );\r\n\r\n                if (recognizeComment(gestureState))\r\n                    props.onSelect();\r\n\r\n            return true;\r\n        }\r\n    });\r\n\r\n    if(dish != null) {\r\n        return(\r\n            <Animatable.View animation=\"fadeInDown\" duration={2000} delay={1000}\r\n                ref={this.handleViewRef}\r\n                {...panResponder.panHandlers}>            \r\n                <Card\r\n                featuredTitle={dish.name}\r\n                image={{ uri: baseUrl + dish.image }}>\r\n                <Text style={{margin: 10}}>\r\n                    {dish.description}\r\n                </Text>\r\n                <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\r\n                    <Icon\r\n                        raised\r\n                        reverse\r\n                        name={ props.favorite ? 'heart' : 'heart-o'}\r\n                        type='font-awesome'\r\n                        color='#f50'\r\n                        onPress={() => props.favorite ? console.log('Already Favorite') : props.onPress()}\r\n                        />\r\n            \r\n                    <Icon\r\n                        raised\r\n                        reverse\r\n                        name='pencil'\r\n                        type='font-awesome'\r\n                        color='#512DA8'\r\n                        onPress={() => props.onSelect()}\r\n                        />\r\n                </View>\r\n            </Card>\r\n            </Animatable.View>\r\n        );\r\n    }\r\n    else{\r\n        return(<View></View>)\r\n    }\r\n}\r\n\r\nfunction RenderComments(props) {\r\n    const comments = props.comments;\r\n\r\n    const renderCommentItem = ({ item, index }) => {\r\n        return(\r\n            <View key={index} style={{margin: 10}}>\r\n                <Text style={{fontSize: 14}}>{item.comment}</Text>\r\n                <Text style={{fontSize: 12}}>{item.rating} Stars</Text>\r\n                <Text style={{fontSize: 12}}>{'-- ' + item.author + ', ' + item.date}</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <Animatable.View animation=\"fadeInUp\" duration={2000} delay={1000}>\r\n            <Card title=\"Comments\">\r\n                <FlatList\r\n                    data={comments}\r\n                    renderItem={renderCommentItem}\r\n                    keyExtractor={item => item.id.toString()}\r\n                    />\r\n            </Card>\r\n        </Animatable.View>\r\n    );\r\n}\r\n\r\nclass Dishdetail extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rating: 0,\r\n            author: '',\r\n            comment: '',\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n    markFavorite(dishId) {\r\n        this.props.postFavorite(dishId);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({ showModal: !this.state.showModal })\r\n    }\r\n\r\n    handleComments(dishId) {\r\n        console.log(JSON.stringify(this.state));\r\n        this.toggleModal();\r\n        this.props.postComment(dishId, this.state.rating, this.state.comment, this.state.author);\r\n    }\r\n\r\n    static navigationOptions = {\r\n        title: 'Dish Details'\r\n    };\r\n\r\n    render(){\r\n        const dishId = this.props.navigation.getParam('dishId', '');\r\n        return(\r\n            <ScrollView>\r\n                <RenderDish dish={this.props.dishes.dishes[+dishId]}\r\n                    favorite={this.props.favorites.some(el => el === dishId)}\r\n                    onPress={() => this.markFavorite(dishId)}\r\n                    onSelect={() => this.toggleModal()}\r\n                    />\r\n                <RenderComments comments={this.props.comments.comments.filter((comment) => comment.dishId === dishId)} />\r\n                <Modal animation={\"slide\"} transparent={false}\r\n                    visible={this.state.showModal}\r\n                    onDismiss={() => this.toggleModal()}\r\n                    onRequestClose={() => this.toggleModal}>\r\n                    <View style={styles.modal}>\r\n                        <View>\r\n                            <Rating showRating\r\n                                type=\"star\"\r\n                                fractions={0}\r\n                                startingValue={0}\r\n                                imageSize={40}\r\n                                onFinishRating={(rating) => this.setState({ rating: rating })}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <Input\r\n                                placeholder=' Author'\r\n                                leftIcon={\r\n                                    <Icon\r\n                                        name='user-o'\r\n                                        type='font-awesome'\r\n                                        size={24}\r\n                                    />\r\n                                }\r\n                                onChangeText={(value) => this.setState({ author: value })}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <Input\r\n                                placeholder=\" Comment\"\r\n                                leftIcon={\r\n                                    <Icon\r\n                                        name='comment-o'\r\n                                        type='font-awesome'\r\n                                        size={24}\r\n                                    />\r\n                                }\r\n                                onChangeText={(value) => this.setState({ comment: value })}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <Button color=\"#512DA8\"\r\n                                title=\"SUBMIT\"\r\n                                onPress={() => this.handleComments(dishId)}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <Button onPress={() => this.toggleModal()}\r\n                                color=\"#989898\"\r\n                                title=\"CLOSE\"\r\n                            />\r\n                        </View>\r\n                    </View>\r\n                </Modal>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    formRow: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        margin: 28\r\n    },\r\n    formLabel: {\r\n        fontSize: 18,\r\n        flex: 2\r\n    },\r\n    formItem: {\r\n        flex: 1\r\n    },\r\n    modal: {\r\n        justifyContent: 'center',\r\n        margin: 20\r\n    },\r\n    modalTitle: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        backgroundColor: '#512DA8',\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        marginBottom: 20\r\n    },\r\n    modalText: {\r\n        fontSize: 18,\r\n        margin: 10\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dishdetail);\r\n"]},"metadata":{},"sourceType":"module"}